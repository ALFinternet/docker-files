# how to pass networking through containers/services
# https://john.muchovej.com/thoughts/setting-up-liso-wireguard/
---
version: "2.1"
services:
#
  privoxyvpn:
    image: ghcr.io/binhex/arch-privoxyvpn
    container_name: privoxyvpn
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=000
      - TZ=${TZ}
      - VPN_USER=${VPNUSER}
      - VPN_PROV=custom
      - VPN_PASS=${VPNPASS}
      - VPN_OUTPUT_PORTS=
      - VPN_OPTIONS=
      - VPN_INPUT_PORTS=6881,7878,8112,8989,9117
      - VPN_ENABLED=yes
      - VPN_CLIENT=openvpn
      - SOCKS_USER=${SOCKSUSER}
      - SOCKS_PASS=${SOCKSPASS}
      - NAME_SERVERS=10.255.255.1,1.1.1.1,1.0.0.1
      - LAN_NETWORK=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
      - ENABLE_SOCKS=yes
      - ENABLE_PRIVOXY=yes
      - DEBUG=false
    volumes:
      - ${LOCVOL1}privoxyvpn:/config
    ports:
      - 8118:8118 # privoxy
      - 9118:9118 # microsocks
      - 6881:6881 # deluge torrents
      - 7878:7878 # radarr
      - 8112:8112 # deluge
      - 8989:8989 # sonarr
      - 9117:9117 # jackett
    networks:
      - outsidelink
    restart: unless-stopped
#
  deluge:
    image: lscr.io/linuxserver/deluge
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${LOCVOL1}deluge:/config
      - ${LOCVOL2}torrents:/downloads
    #ports:
      #- 8112:8112
      #- 6881:6881
      #- 6881:6881/udp
    restart: unless-stopped
    network_mode: "service:privoxyvpn"
    depends_on: [ "privoxyvpn", ]
#
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${LOCVOL1}radarr:/config
      - ${MEDIAVOL}Movies:/movies #optional
      - ${LOCVOL2}torrents:/downloads  #optional
    #ports:
      #- 7878:7878
    restart: unless-stopped
    network_mode: "service:privoxyvpn"
    depends_on: [ "privoxyvpn", ]
#
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${LOCVOL1}sonarr:/config
      - ${MEDIAVOL}TV Shows:/tv #optional
      - ${LOCVOL2}torrents:/downloads  #optional
    #ports:
      #- 8989:8989
    restart: unless-stopped
    network_mode: "service:privoxyvpn"
    depends_on: [ "privoxyvpn", ]
#
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ${LOCVOL1}jackett:/config
      - ${LOCVOL2}torrents:/downloads  #optional
    #ports:
      #- 9117:9117
    restart: unless-stopped
    network_mode: "service:privoxyvpn"
    depends_on: [ "privoxyvpn", ]
#
#
#
#
  youtube-dl:
    image: kmb32123/youtube-dl-server
    container_name: youtube-dl
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${LOCVOL2}youtube-dl:/youtube-dl  #optional
    ports:
      - 42000:8080
    networks:
      - outsidelink
    restart: unless-stopped
#
networks:
  outsidelink:
    external: true
    name: ${NETCON}